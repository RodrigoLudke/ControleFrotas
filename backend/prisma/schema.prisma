datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  senha           String
  nome            String?
  cpf             String?   @unique
  rg              String?   @unique
  cnh             String?   @unique
  validadeCnh     DateTime?
  telefone        String?
  endereco        String?
  dataContratacao DateTime?
  salario         Decimal?  @db.Decimal(10, 2)
  observacoes     String?
  categoria       String?   // A, B, C, D, E, AB
  status          String    @default("ativo")
  dataNascimento  DateTime?

  veiculos      UserVeiculo[]
  viagens       Viagem[]
  refreshTokens RefreshToken[]
  role          Role          @default(USER)
}

model Veiculo {
    id               Int            @id @default(autoincrement())
    placa            String         @unique
    marca            String?
    modelo           String
    ano              Int
    cor              String
    chassi           String         @unique
    renavam          String         @unique
    capacidade       Int
    quilometragem    Int
    ultimaManutencao DateTime?
    proximaManutencao DateTime?
    combustivel      Combustivel
    valorCompra      Decimal        @db.Decimal(10, 2)
    dataCompra       DateTime
    seguradora       String?
    apoliceSeguro    String?
    validadeSeguro   DateTime?
    observacoes      String?
    status           VeiculoStatus  @default(disponivel)

    usuarios  UserVeiculo[]
    viagens   Viagem[]
}

model UserVeiculo {
  id        Int   @id @default(autoincrement())
  userId    Int
  veiculoId Int

  user     User    @relation(fields: [userId], references: [id])
  veiculo  Veiculo @relation(fields: [veiculoId], references: [id])
}

model Viagem {
  id             Int      @id @default(autoincrement())
  userId         Int
  veiculoId      Int

  dataSaida      DateTime
  dataChegada    DateTime

  finalidade     String
  kmFinal        Int

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user     User    @relation(fields: [userId], references: [id])
  veiculo  Veiculo @relation(fields: [veiculoId], references: [id])
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum Role {
  ADMIN
  USER
}

enum VeiculoStatus {
  disponivel
  em_uso
  manutencao
  inativo
}

enum Combustivel {
  gasolina
  alcool
  flex
  diesel
  eletrico
  hibrido
}

